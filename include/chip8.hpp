#pragma once
#include "time.h"
#include <fstream>
#include <iostream>
#include <random>
#include <stdint.h>

class chip8 {

  private:
	uint16_t stack[16]; // Stack
	uint16_t sp;		// Stack pointer

	uint8_t memory[4096]; // Memory (4k)
	uint8_t V[16];		  // V registers (V0-VF)

	uint16_t pc;	 // Program counter
	uint16_t opcode; // Current op code
	uint16_t I;		 // Index register

	uint8_t delayTimer; // Delay timer
	uint8_t soundTimer; // Sound timer

	unsigned char chip8_fontset[80] = {
		0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
		0x20, 0x60, 0x20, 0x20, 0x70, // 1
		0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
		0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
		0x90, 0x90, 0xF0, 0x10, 0x10, // 4
		0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
		0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
		0xF0, 0x10, 0x20, 0x40, 0x40, // 7
		0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
		0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
		0xF0, 0x90, 0xF0, 0x90, 0x90, // A
		0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
		0xF0, 0x80, 0x80, 0x80, 0xF0, // C
		0xE0, 0x90, 0x90, 0x90, 0xE0, // D
		0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
		0xF0, 0x80, 0xF0, 0x80, 0x80  // F
	};

  public:
	uint8_t gfx[64 * 32]; // Graphics buffer
	uint8_t key[16];	  // Keypad
	bool drawFlag;		  // Indicates a draw has occurred

	chip8();
	~chip8();
	void initialize();
	void emulateCycle();
	void loadROM(char const *filename);
};